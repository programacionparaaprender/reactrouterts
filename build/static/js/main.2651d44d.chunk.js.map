{"version":3,"sources":["store/WeatherForecasts.ts","store/index.ts","store/Counter.ts","store/Product.ts","store/Vieja.ts","store/google/GoogleMaps.ts","components/NavMenu.tsx","components/Layout.tsx","components/Home.tsx","components/Counter.tsx","components/Product.tsx","components/FetchData.tsx","components/Vieja.tsx","components/google/GoogleMapsType.tsx","App.tsx","registerServiceWorker.ts","index.tsx","store/configureStorePersisted.ts"],"names":["actionCreators","requestWeatherForecasts","startDateIndex","dispatch","getState","appState","weatherForecasts","fetch","then","response","json","data","type","forecasts","unloadedState","isLoading","reducers","counter","state","incomingAction","undefined","count","console","log","JSON","stringify","products","id","name","description","price","action","products2","y","String","push","x","payload","vieja","history","squares","Array","fill","stepNumber","xIsNext","googlemaps","markers","lat","lng","NavMenu","isOpen","toggle","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","this","Collapse","navbar","NavItem","NavLink","React","props","children","connect","href","Counter","aria-live","role","aria-label","increment","decrement","Product","handleChange1","bind","handleChange2","handleChange3","handleChange4","a√±adirProducto","editarProducto","forecast","product","addToCart","e","target","value","onChange","placeholder","title","aria-labelledby","map","key","deleteProduct","FetchData","ensureDataFetched","renderForecastsTable","renderPagination","parseInt","match","params","date","temperatureC","temperatureF","summary","prevStartDateIndex","nextStartDateIndex","WeatherForecastsStore","calculateWinner","lines","i","length","a","b","c","Square","style","margin","paddingLeft","listStyle","width","height","Board","renderSquare","row","float","col","display","ViejaVentana","handleClick","s","slice","concat","step","status","current","winner","moves","move","desc","jumpTo","MapContainer","onMarkerClick","onInfoWindowClose","onMapa","btnLimpiar","ref","ev","coord","latLng","latitude","longitude","google","initialCenter","zoom","position","paths","GoogleApiWrapper","apiKey","Layout","exact","path","component","Home","Vieja","GoogleMapsType","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","document","getElementsByTagName","getAttribute","createBrowserHistory","basename","store","initialState","middleware","thunk","routerMiddleware","rootReducer","combineReducers","router","connectRouter","persistConfig","storage","persistedReducer","persistReducer","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","applyMiddleware","persistor","persistStore","configureStore","ReactDOM","loading","App","getElementById","URL","process","toString","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2651d44d.chunk.js","sourcesContent":["import { Action, Reducer } from 'redux';\r\nimport { AppThunkAction } from './';\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface WeatherForecastsState {\r\n    isLoading: boolean;\r\n    startDateIndex?: number;\r\n    forecasts: WeatherForecast[];\r\n}\r\n\r\nexport interface WeatherForecast {\r\n    date: string;\r\n    temperatureC: number;\r\n    temperatureF: number;\r\n    summary: string;\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n\r\ninterface RequestWeatherForecastsAction {\r\n    type: 'REQUEST_WEATHER_FORECASTS';\r\n    startDateIndex: number;\r\n}\r\n\r\ninterface ReceiveWeatherForecastsAction {\r\n    type: 'RECEIVE_WEATHER_FORECASTS';\r\n    startDateIndex: number;\r\n    forecasts: WeatherForecast[];\r\n}\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\ntype KnownAction = RequestWeatherForecastsAction | ReceiveWeatherForecastsAction;\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    requestWeatherForecasts: (startDateIndex: number): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        // Only load data if it's something we don't already have (and are not already loading)\r\n        const appState = getState();\r\n        if (appState && appState.weatherForecasts && startDateIndex !== appState.weatherForecasts.startDateIndex) {\r\n            fetch(`weatherforecast`)\r\n                .then(response => response.json() as Promise<WeatherForecast[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_WEATHER_FORECASTS', startDateIndex: startDateIndex, forecasts: data });\r\n                });\r\n\r\n            dispatch({ type: 'REQUEST_WEATHER_FORECASTS', startDateIndex: startDateIndex });\r\n        }\r\n    }\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nconst unloadedState: WeatherForecastsState = { forecasts: [], isLoading: false };\r\n\r\nexport const reducer: Reducer<WeatherForecastsState> = (state: WeatherForecastsState | undefined, incomingAction: Action): WeatherForecastsState => {\r\n    if (state === undefined) {\r\n        return unloadedState;\r\n    }\r\n\r\n    const action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'REQUEST_WEATHER_FORECASTS':\r\n            return {\r\n                startDateIndex: action.startDateIndex,\r\n                forecasts: state.forecasts,\r\n                isLoading: true\r\n            };\r\n        case 'RECEIVE_WEATHER_FORECASTS':\r\n            // Only accept the incoming data if it matches the most recent request. This ensures we correctly\r\n            // handle out-of-order responses.\r\n            if (action.startDateIndex === state.startDateIndex) {\r\n                return {\r\n                    startDateIndex: action.startDateIndex,\r\n                    forecasts: action.forecasts,\r\n                    isLoading: false\r\n                };\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n};\r\n","import * as WeatherForecasts from './WeatherForecasts';\r\nimport * as Counter from './Counter';\r\nimport * as Product from './Product';\r\nimport * as Vieja from './Vieja';\r\nimport * as GoogleMaps from './google/GoogleMaps';\r\n//import { ProductState }  from '../types.ts'\r\n// The top-level state object\r\n\r\n\r\nexport interface ApplicationState {\r\n    counter: Counter.CounterState | undefined;\r\n    products: Product.ProductState | undefined;\r\n    weatherForecasts: WeatherForecasts.WeatherForecastsState | undefined;\r\n    vieja: Vieja.ViejaState | undefined;\r\n    markers: GoogleMaps.MarkerState | undefined;\r\n}\r\n\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n    counter: Counter.reducer,\r\n    products: Product.reducer,\r\n    weatherForecasts: WeatherForecasts.reducer,\r\n    vieja: Vieja.reducer,\r\n    googlemaps: GoogleMaps.reducer,\r\n};\r\n\r\n// This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\r\n// correctly typed to match your store.\r\nexport interface AppThunkAction<TAction> {\r\n    (dispatch: (action: TAction) => void, getState: () => ApplicationState): void;\r\n}\r\n","import { Action, Reducer } from 'redux';\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface CounterState {\r\n    count: number;\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n// Use @typeName and isActionType for type detection that works even after serialization/deserialization.\r\n\r\nexport interface IncrementCountAction { type: 'INCREMENT_COUNT' }\r\nexport interface DecrementCountAction { type: 'DECREMENT_COUNT' }\r\nexport interface ADD_TO_CART { type: 'ADD_TO_CART'}\r\n\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\nexport type KnownAction = IncrementCountAction | DecrementCountAction;\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    increment: () => ({ payload:'data',type: 'INCREMENT_COUNT' } as IncrementCountAction),\r\n    decrement: () => ({ type: 'DECREMENT_COUNT' } as DecrementCountAction),\r\n    /* addToCart: (productId:any) => (dispatch, getState) => {\r\n        if (getState().products.byId[productId].inventory > 0) {\r\n          dispatch(addToCartUnsafe(productId))\r\n        }\r\n    } */\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nexport const reducer: Reducer<CounterState> = (state: CounterState | undefined, incomingAction: Action): CounterState => {\r\n    if (state === undefined) {\r\n        return { count: 0 };\r\n    }\r\n    console.log('incomingAction: '+JSON.stringify(incomingAction))\r\n    const action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'INCREMENT_COUNT':\r\n            \r\n        return { count: state.count + 1 };\r\n        case 'DECREMENT_COUNT':\r\n            return { count: state.count - 1 };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","//import { Action, Reducer } from 'redux';\r\nimport { Reducer } from 'redux';\r\nimport {Producto} from '../types'\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\n\r\n\r\nexport interface ProductState{\r\n    //products:Array<Producto>\r\n    products:Producto[]\r\n}  \r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n// Use @typeName and isActionType for type detection that works even after serialization/deserialization.\r\n\r\nexport interface IncrementCountAction { type: 'INCREMENT_COUNT' }\r\nexport interface DecrementCountAction { type: 'DECREMENT_COUNT' }\r\nexport interface ADD_TO_CART { \r\n    type: 'ADD_TO_CART',\r\n    payload:{\r\n        id: string;\r\n        name: string;\r\n        description:string\r\n        price: string;\r\n    }\r\n}\r\nexport interface DELETE_PRODUCT { \r\n    type: 'DELETE_PRODUCT',\r\n    id: string;\r\n}\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\nexport type KnownAction = IncrementCountAction | DecrementCountAction | ADD_TO_CART | DELETE_PRODUCT;\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    increment: () => ({ payload:'data',type: 'INCREMENT_COUNT' } as IncrementCountAction),\r\n    decrement: () => ({ type: 'DECREMENT_COUNT' } as DecrementCountAction),\r\n    addToCart: (product:Producto) => ({ payload:product,type: 'ADD_TO_CART' } as ADD_TO_CART),  \r\n    deleteProduct: (id:string) => ({ id:id,type: 'DELETE_PRODUCT' } as DELETE_PRODUCT)  \r\n\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nexport const reducer: Reducer<ProductState> = (state: ProductState | undefined, incomingAction: KnownAction): ProductState => {\r\n    if (state === undefined) {\r\n        let products = [\r\n            {\r\n                id:\"1\",\r\n                name:\"Product One\",\r\n                description: \"This is product one\",\r\n                price: \"29.99\",\r\n            },\r\n            {\r\n                id:\"2\",\r\n                name:\"Product Two\",\r\n                description: \"This is product two\",\r\n                price: \"39.99\",\r\n            },\r\n            {\r\n                id:\"3\",\r\n                name:\"Product Three\",\r\n                description: \"This is product three\",\r\n                price: \"59.99\",\r\n            }\r\n        ]\r\n        return { products: products };\r\n    }\r\n    console.log('incomingAction: '+JSON.stringify(incomingAction))\r\n    var action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'DELETE_PRODUCT':\r\n            action = incomingAction as DELETE_PRODUCT;\r\n            //let products:Array<Producto>\r\n            let products2 = []\r\n            for(var y in state.products){\r\n                if(String(state.products[y].id) !== String(action.id))\r\n                    products2.push(state.products[y]);\r\n            } \r\n            return  { products: products2 };\r\n            \r\n\r\n        case 'ADD_TO_CART':\r\n            action = incomingAction as ADD_TO_CART;\r\n            //let products:Array<Producto>\r\n            let products = []\r\n            for(var x in state.products){\r\n                products.push(state.products[x]);\r\n            }\r\n            products.push({\r\n                id: action.payload.id,\r\n                name: action.payload.name,\r\n                description:action.payload.description,\r\n                price: action.payload.price\r\n            }); \r\n            return  { products: products };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { Reducer } from 'redux';\r\nimport {Vieja,IBoard} from '../types'\r\n\r\nexport interface ViejaState {\r\n    vieja: Vieja\r\n}\r\n\r\nexport interface IncrementCountAction { type: 'INCREMENT_COUNT' }\r\nexport interface DecrementCountAction { type: 'DECREMENT_COUNT' }\r\nexport interface ADD_TO_CART { \r\n    type: 'ADD_TO_CART',\r\n    payload:{\r\n        id: string;\r\n        name: string;\r\n        description:string\r\n        price: string;\r\n    }\r\n}\r\nexport interface DELETE_PRODUCT { \r\n    type: 'DELETE_PRODUCT',\r\n    id: string;\r\n}\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\nexport type KnownAction = IncrementCountAction | DecrementCountAction | ADD_TO_CART | DELETE_PRODUCT;\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    increment: () => ({ payload:'data',type: 'INCREMENT_COUNT' } as IncrementCountAction),\r\n    decrement: () => ({ type: 'DECREMENT_COUNT' } as DecrementCountAction),\r\n    deleteProduct: (id:string) => ({ id:id,type: 'DELETE_PRODUCT' } as DELETE_PRODUCT)  \r\n\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nexport const reducer: Reducer<ViejaState> = (state: ViejaState | undefined, incomingAction: KnownAction): ViejaState => {\r\n    if (state === undefined) {\r\n        let vieja = {\r\n            history: [{\r\n              squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n          };\r\n        return { vieja: vieja }\r\n    }\r\n    console.log('incomingAction: '+JSON.stringify(incomingAction))\r\n    var action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { Reducer } from 'redux';\r\nimport {GoogleAPI} from 'google-maps-react';\r\n\r\n\r\nexport interface Coordenada{\r\n    lat: number,\r\n    lng: number\r\n}\r\n\r\nexport interface MarkerGoogleState{\r\n    markers:Coordenada[]\r\n    google: GoogleAPI\r\n    loaded?: boolean\r\n} \r\n\r\nexport interface MarkerState{\r\n    markers:Coordenada[]\r\n    \r\n}  \r\n\r\nexport interface ADD_TO_COORDENADA { \r\n    type: 'ADD_TO_COORDENADA',\r\n    payload:{\r\n        lat: number,\r\n        lng: number\r\n    }\r\n}\r\nexport interface DELETE_COORDENADA { \r\n    type: 'DELETE_COORDENADA'\r\n}\r\n\r\nexport type KnownAction = ADD_TO_COORDENADA | DELETE_COORDENADA;\r\n\r\nexport const actionCreators = {\r\n\r\n    addToCoordenada: (marker:Coordenada) => ({ payload:marker, type: 'ADD_TO_COORDENADA' } as ADD_TO_COORDENADA),  \r\n    deleteProduct: () => ({ type: 'DELETE_COORDENADA' } as DELETE_COORDENADA)  \r\n\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nexport const reducer: Reducer<MarkerState> = (state: MarkerState | undefined, incomingAction: KnownAction): MarkerState => {\r\n    if (state === undefined) {\r\n        let markers:any = []\r\n        /* let markers = [{\r\n            lat: 37.77484758908875,\r\n            lng: -122.44252162500497\r\n          },{\r\n            lat: 37.78155013787093, \r\n            lng: -122.47137790613787\r\n          },{\r\n            lat: 37.77985420629088, \r\n            lng: -122.49541049891131\r\n          }] */\r\n        return { markers: markers };\r\n    }\r\n    console.log('incomingAction: '+JSON.stringify(incomingAction))\r\n    var action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'DELETE_COORDENADA':\r\n            action = incomingAction as DELETE_COORDENADA;\r\n            let markers2:Coordenada[]\r\n            markers2 = []\r\n            return  { markers: markers2 };\r\n            \r\n\r\n        case 'ADD_TO_COORDENADA':\r\n            action = incomingAction as ADD_TO_COORDENADA;\r\n            //let products:Array<Producto>\r\n            let markers:any = []\r\n            for(var x in state.markers){\r\n                markers.push(state.markers[x]);\r\n            }\r\n            markers.push({\r\n                lat: action.payload.lat,\r\n                lng: action.payload.lng,\r\n            }); \r\n            \r\n            return  { markers: markers };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport default class NavMenu extends React.PureComponent<{}, { isOpen: boolean }> {\r\n    public state = {\r\n        isOpen: false\r\n    };\r\n\r\n    public render() {\r\n        return (\r\n            <header>\r\n                <Navbar className=\"navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3\" light>\r\n                    <Container>\r\n                        <NavbarBrand tag={Link} to=\"/\">ReactRedux</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} className=\"mr-2\"/>\r\n                        <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={this.state.isOpen} navbar>\r\n                            <ul className=\"navbar-nav flex-grow\">\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/vieja\">Vieja</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/googlemaps\">Google maps</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} className=\"text-dark\" to=\"/product\">Productos</NavLink>\r\n                                </NavItem>\r\n                            </ul>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport NavMenu from './NavMenu';\r\n\r\nexport default (props: { children?: React.ReactNode }) => (\r\n    <React.Fragment>\r\n        <NavMenu/>\r\n        <Container>\r\n            {props.children}\r\n        </Container>\r\n    </React.Fragment>\r\n);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Hello, world!</h1>\r\n    <p>Welcome to your new single-page application, built with:</p>\r\n    <ul>\r\n      <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n      <li><a href='https://facebook.github.io/react/'>React</a> and <a href='https://redux.js.org/'>Redux</a> for client-side code</li>\r\n      <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n    </ul>\r\n    <p>To help you get started, we've also set up:</p>\r\n    <ul>\r\n      <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n      <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n      <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n    </ul>\r\n    <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n  </div>\r\n);\r\n\r\nexport default connect()(Home);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { ApplicationState } from '../store';\r\nimport * as CounterStore from '../store/Counter';\r\n\r\ntype CounterProps =\r\n    CounterStore.CounterState &\r\n    typeof CounterStore.actionCreators &\r\n    RouteComponentProps<{}>;\r\n\r\nclass Counter extends React.PureComponent<CounterProps> {\r\n    public render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Counter</h1>\r\n\r\n                <p>This is a simple example of a React component.</p>\r\n\r\n                <p aria-live=\"polite\">Current count: <strong>{this.props.count}</strong></p>\r\n                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                <button type=\"button\"\r\n                    className=\"btn btn-primary btn-lg\"\r\n                    onClick={() => { this.props.increment(); }}>\r\n                    Increment\r\n                </button>\r\n                <button type=\"button\"\r\n                    className=\"btn btn-danger btn-lg\"\r\n                    onClick={() => { this.props.decrement(); }}>\r\n                    Decrement\r\n                </button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    (state: ApplicationState) => state.counter,\r\n    CounterStore.actionCreators\r\n)(Counter);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { ApplicationState } from '../store';\r\n\r\n//import * as CounterStore from '../store/Counter';\r\nimport * as ProductStore from '../store/Product';\r\nimport {Producto} from '../types'\r\n\r\ntype ProductProps =\r\nProductStore.ProductState &\r\n    typeof ProductStore.actionCreators &\r\n    RouteComponentProps<{}>;\r\n\r\n\r\n//Producto colocarlo en el extends para que funcione todo\r\nclass Product extends React.PureComponent<ProductProps, Producto> {\r\n    /* public state: Producto = {\r\n        id: '1',\r\n        name: 'Product 1',\r\n        description:'Description product 1',\r\n        price: 20.00\r\n    };  */\r\n    constructor(props: any) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            id: '1',\r\n            name: 'Product 1',\r\n            description:'Description product 1',\r\n            price: \"20.00\"\r\n        }\r\n        this.handleChange1 = this.handleChange1.bind(this);\r\n        this.handleChange2 = this.handleChange2.bind(this);\r\n        this.handleChange3 = this.handleChange3.bind(this);\r\n        this.handleChange4 = this.handleChange4.bind(this);\r\n        this.a√±adirProducto = this.a√±adirProducto.bind(this);\r\n        this.editarProducto = this.editarProducto.bind(this);\r\n    } \r\n    editarProducto(forecast:any){\r\n        this.setState({\r\n            id: forecast.id,\r\n            name: forecast.name,\r\n            description:forecast.description,\r\n            price: forecast.price\r\n        });\r\n    }\r\n    a√±adirProducto(){\r\n        var product:Producto; \r\n        product = {\r\n            id: this.state.id,\r\n            name: this.state.name,\r\n            description:this.state.description,\r\n            price: this.state.price\r\n        }\r\n        this.props.addToCart(product);\r\n    }\r\n    handleChange1(e:any) {\r\n        /* var obj[e.target.name] = e.target.value\r\n        this.setState(obj); */\r\n        //console.log(e.target.value);\r\n        this.setState({ id: String(e.target.value) });\r\n        //this.state.id = e.target.value;\r\n    }\r\n    handleChange2(e:any) {\r\n        /* var obj[e.target.name] = e.target.value\r\n        this.setState(obj); */\r\n        //console.log(e.target.value);\r\n        this.setState({ name: String(e.target.value) });\r\n        //this.state.id = e.target.value;\r\n    }\r\n    handleChange3(e:any) {\r\n        /* var obj[e.target.name] = e.target.value\r\n        this.setState(obj); */\r\n        //console.log(e.target.value);\r\n        this.setState({ description: String(e.target.value) });\r\n        //this.state.id = e.target.value;\r\n    }\r\n    handleChange4(e:any) {\r\n        /* var obj[e.target.name] = e.target.value\r\n        this.setState(obj); */\r\n        //console.log(e.target.value);\r\n        this.setState({ price: String(e.target.value) });\r\n        //this.state.id = e.target.value;\r\n    }\r\n    public render() {\r\n        //var product:ProductoClass = new ProductoClass();  //Product.ProductState.;\r\n        /* product = {\r\n            id: '1',\r\n            name: 'Product 1',\r\n            description:'Description product 1',\r\n            price: 20.00\r\n        } */\r\n        return (\r\n            <React.Fragment>\r\n                <h1>\r\n                    Ejemplo de productos usando estados persistentes.\r\n                </h1>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>C√≥digo producto:</label>\r\n                        <input \r\n                            onChange={this.handleChange1}\r\n                            value={this.state.id} \r\n                            type=\"number\" \r\n                            id=\"Iid\" \r\n                            name=\"id\" \r\n                            placeholder=\"Ingrese c√≥digo\" \r\n                            className=\"form-control\" />\r\n                    \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Nombre:</label>\r\n                        <input \r\n                            onChange={this.handleChange2}\r\n                            value={this.state.name} \r\n                            type=\"text\" \r\n                            id=\"Inombre\" \r\n                            name=\"nombre\" \r\n                            placeholder=\"Ingrese nombre\" \r\n                            className=\"form-control\" />\r\n                    \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Descripcion:</label>\r\n                        <input \r\n                            onChange={this.handleChange3}\r\n                            value={this.state.description}\r\n                            type=\"text\" \r\n                            id=\"Idescripcion\" \r\n                            name=\"descripcion\" \r\n                            placeholder=\"Ingrese descripcion\" \r\n                            className=\"form-control\" />\r\n                    \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Precio:</label>\r\n                        <input \r\n                            onChange={this.handleChange4}\r\n                            value={this.state.price}\r\n                            title=\"Ingrese precio\" \r\n                            type=\"number\" \r\n                            id=\"Idescripcion\" \r\n                            name=\"descripcion\" \r\n                            placeholder=\"Ingrese precio\" \r\n                            className=\"form-control\" />\r\n                    \r\n                    </div>\r\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                        <button type=\"button\"\r\n                            className=\"btn btn-primary btn-lg\"\r\n                            onClick={() => { this.a√±adirProducto(); }}>\r\n                            addToCard\r\n                        </button>\r\n                        <button type=\"button\"\r\n                            className=\"btn btn-success\">\r\n                            Editar\r\n                        </button>\r\n                        <button type=\"reset\"\r\n                            className=\"btn btn-warning btn-lg\">\r\n                            Reset\r\n                        </button>\r\n                        <button type=\"button\"\r\n                            className=\"btn btn-danger btn-lg\">\r\n                            Salir\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Name</th>\r\n                    <th>Descripcion</th>\r\n                    <th>Acciones</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.props.products.map((forecast: Producto) =>\r\n                    <tr key={forecast.id}>\r\n                        <td>{forecast.id}</td>\r\n                        <td>{forecast.name}</td>\r\n                        <td>{forecast.description}</td>\r\n                        <td>\r\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                <button \r\n                                    onClick={() => { this.editarProducto(forecast) }}\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-success\">\r\n                                    Editar\r\n                                </button>\r\n                                <button type=\"button\"\r\n                                    onClick={() => { this.props.deleteProduct(forecast.id); }}\r\n                                    className=\"btn btn-danger\">\r\n                                    Eliminar\r\n                                </button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )} \r\n                {/* {<p aria-live=\"polite\">Current products: <strong>{JSON.stringify(this.props.products)}</strong></p> } */}\r\n                </tbody>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    (state: ApplicationState) => state.products,\r\n    ProductStore.actionCreators\r\n)(Product as any);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { ApplicationState } from '../store';\r\nimport * as WeatherForecastsStore from '../store/WeatherForecasts';\r\n\r\n// At runtime, Redux will merge together...\r\ntype WeatherForecastProps =\r\n  WeatherForecastsStore.WeatherForecastsState // ... state we've requested from the Redux store\r\n  & typeof WeatherForecastsStore.actionCreators // ... plus action creators we've requested\r\n  & RouteComponentProps<{ startDateIndex: string }>; // ... plus incoming routing parameters\r\n\r\n\r\nclass FetchData extends React.PureComponent<WeatherForecastProps> {\r\n  // This method is called when the component is first added to the document\r\n  public componentDidMount() {\r\n    this.ensureDataFetched();\r\n  }\r\n\r\n  // This method is called when the route parameters change\r\n  public componentDidUpdate() {\r\n    this.ensureDataFetched();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 id=\"tabelLabel\">Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server and working with URL parameters.</p>\r\n        {this.renderForecastsTable()}\r\n        {this.renderPagination()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private ensureDataFetched() {\r\n    const startDateIndex = parseInt(this.props.match.params.startDateIndex, 10) || 0;\r\n    this.props.requestWeatherForecasts(startDateIndex);\r\n  }\r\n\r\n  private renderForecastsTable() {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.forecasts.map((forecast: WeatherForecastsStore.WeatherForecast) =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  private renderPagination() {\r\n    const prevStartDateIndex = (this.props.startDateIndex || 0) - 5;\r\n    const nextStartDateIndex = (this.props.startDateIndex || 0) + 5;\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-between\">\r\n        <Link className='btn btn-outline-secondary btn-sm' to={`/fetch-data/${prevStartDateIndex}`}>Previous</Link>\r\n        {this.props.isLoading && <span>Loading...</span>}\r\n        <Link className='btn btn-outline-secondary btn-sm' to={`/fetch-data/${nextStartDateIndex}`}>Next</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state: ApplicationState) => state.weatherForecasts, // Selects which state properties are merged into the component's props\r\n  WeatherForecastsStore.actionCreators // Selects which action creators are merged into the component's props\r\n)(FetchData as any);\r\n","import * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport './Vieja.css';\r\nimport CSS from 'csstype';\r\n\r\nimport { ApplicationState } from '../store';\r\nimport {IBoard,Vieja} from '../types'\r\nimport * as ViejaStore from '../store/Vieja';\r\nimport { connect } from 'react-redux';\r\ntype ViejaProps =\r\nViejaStore.ViejaState &\r\n    typeof ViejaStore.actionCreators &\r\n    RouteComponentProps<{}>;\r\n\r\nfunction calculateWinner(squares:any) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n}\r\n   \r\nfunction Square(props:any) {\r\n    const style = {\r\n      margin: '0.5em',\r\n      paddingLeft: 0,\r\n      listStyle: 'none',\r\n      width:'100px',\r\n      height:'100px'\r\n    };\r\n    return (\r\n      <button style={style} className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\n \r\nexport interface BoardPanel{\r\n  squares: Array<string>\r\n  onClick:Function\r\n} \r\n\r\nclass Board extends React.PureComponent<BoardPanel> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.renderSquare = this.renderSquare.bind(this);\r\n    } \r\n\r\n    renderSquare(i:string) {\r\n      const style = {\r\n        margin: '0.5em',\r\n        paddingLeft: 0,\r\n        listStyle: 'none',\r\n        width:'100px',\r\n        height:'100px'\r\n      };\r\n      return (\r\n        <Square\r\n          value={this.props.squares[parseInt(i)]}\r\n          onClick={() => this.props.onClick(i)}\r\n        />\r\n      );\r\n    }\r\n  \r\n    public render() {\r\n      const vieja: CSS.Properties = {float: 'left',width: '300px',display:'block'};\r\n      const row: CSS.Properties = {float: 'left',width: '100%'};\r\n      const col: CSS.Properties = {float: 'left',width: '33.33%'};\r\n      return (\r\n        <div style={vieja}>\r\n          <div style={row} className=\"board-row\">\r\n          <div style={col}>{this.renderSquare(\"0\")}</div>\r\n          <div style={col}>{this.renderSquare(\"1\")}</div>\r\n          <div style={col}>{this.renderSquare(\"2\")}</div>\r\n          </div>\r\n          <div style={row} className=\"board-row\">\r\n            <div style={col}>{this.renderSquare(\"3\")}</div>\r\n            <div style={col}>{this.renderSquare(\"4\")}</div>\r\n            <div style={col}>{this.renderSquare(\"5\")}</div>\r\n            \r\n            \r\n            \r\n          </div>\r\n          <div style={row} className=\"board-row\">\r\n          <div style={col}>{this.renderSquare(\"6\")}</div>\r\n          <div style={col}>{this.renderSquare(\"7\")}</div>\r\n          <div style={col}>{this.renderSquare(\"8\")}</div>\r\n            \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n\r\nclass ViejaVentana extends React.PureComponent<ViejaProps, Vieja> {\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {\r\n          history: [{\r\n            squares: Array(9).fill(null),\r\n          }],\r\n          stepNumber: 0,\r\n          xIsNext: true,\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n  \r\n    handleClick(s:string) {\r\n      let i:number = parseInt(s);  \r\n      \r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n          return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n          history: history.concat([{\r\n            squares: squares\r\n          }]),\r\n          stepNumber: history.length,\r\n          xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n  \r\n  \r\n    jumpTo(step:number) {\r\n        this.setState({\r\n          stepNumber: step,\r\n          xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n    \r\n  \r\n    public render() {\r\n        const history:Array<IBoard> = this.state.history;\r\n        const current:IBoard = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n        const row: CSS.Properties = {float: 'left',width: '100%'};\r\n        const col: CSS.Properties = {float: 'left',width: '33.33%'};\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success\" \r\n                    onClick={() => this.jumpTo(move)}>\r\n                      {desc}\r\n                  </button>\r\n                </li>\r\n            );\r\n        });\r\n    \r\n        let status;\r\n        if (winner) {\r\n          status = 'Winner: ' + winner;\r\n        } else {\r\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n    \r\n        return (\r\n          <div className=\"card card-default\">\r\n            <div className=\"card-body\">\r\n              <Board\r\n                squares={current.squares}\r\n                onClick={(i:string) => this.handleClick(i)}\r\n              />\r\n            </div>\r\n            <div style={row} className=\"game-info\">\r\n              <div><h2>{status}</h2></div>\r\n              <ol>{moves}</ol>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n};\r\n\r\nexport default connect(\r\n  (state: ApplicationState) => state.vieja,\r\n  ViejaStore.actionCreators\r\n)(ViejaVentana as any);\r\n","import {Polygon, IProvidedProps,mapEventHandler,markerEventHandler,Map, InfoWindow, Marker, GoogleApiWrapper,IMapProps,} from 'google-maps-react';\r\nimport * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { ApplicationState } from '../../store';\r\nimport CSS from 'csstype';\r\n\r\nimport * as MarkerStore from '../../store/google/GoogleMaps';\r\nimport { Coordenada} from '../../store/google/GoogleMaps';\r\ntype MarkerProps =\r\nMarkerStore.MarkerGoogleState &\r\n    typeof MarkerStore.actionCreators &\r\n    RouteComponentProps<{}>;\r\n//IMapProps\r\n\r\n/* function Marcaciones(props:any) {\r\n    const tamanio = props.markers.length;\r\n    if (tamanio > 0) {\r\n      return  {props.markers.map((forecast: any) =>\r\n        <Marker \r\n            position={{\r\n                lat: forecast.lat,\r\n                lng: forecast.lng\r\n            }} />\r\n        )} ;\r\n    }\r\n    return <div />;\r\n} */\r\n\r\nexport class MapContainer extends React.Component<IMapProps, { markers: Coordenada[] }> {\r\n    //onMapClicked: mapEventHandler;\r\n    onMarkerClick: any//markerEventHandler;\r\n    \r\n    onInfoWindowClose: any;\r\n    //map?: google.maps.Map | google.maps.StreetViewPanorama\r\n    constructor(props:any){\r\n        super(props);\r\n        this.onMapa = this.onMapa.bind(this);\r\n        this.btnLimpiar = this.btnLimpiar.bind(this);\r\n        //this.onMarkerClick = this.onMarkerClick.bind(this);\r\n        //this.onInfoWindowClose = this.onInfoWindowClose.bind(this);\r\n    }\r\n    public state = {\r\n        markers: []\r\n    };\r\n    btnLimpiar(){\r\n        this.setState({markers: []});\r\n    }\r\n    onMapa(ref:any, map:any, ev:any){\r\n        const latLng = ev.latLng;\r\n        //console.log(e);\r\n        const latitude = latLng.lat(); \r\n        const longitude = latLng.lng(); \r\n        console.log(latitude + \", \" + longitude);  \r\n        var coord:Coordenada; \r\n        coord = {\r\n            lat: latitude,\r\n            lng: longitude,\r\n        }\r\n        let markers:any = []\r\n\r\n        for(var x in this.state.markers){\r\n            markers.push(this.state.markers[x]); \r\n        }\r\n        markers.push({\r\n            lat: coord.lat,\r\n            lng: coord.lng,\r\n        }); \r\n        this.setState({markers: markers});\r\n    }\r\n    componentDidMount() {\r\n        \r\n    }\r\n    public render() {\r\n        //GoogleMaps.tsx:22 37.77484758908875, -122.44252162500497\r\n        /* let makers = [{\r\n            lat: 37.77484758908875,\r\n            lng: -122.44252162500497\r\n          },{\r\n            lat: 37.78155013787093, \r\n            lng: -122.47137790613787\r\n          },{\r\n            lat: 37.77985420629088, \r\n            lng: -122.49541049891131\r\n          }]\r\n *///\r\n            const style: CSS.Properties = {\r\n                height:\"200px\"\r\n            };\r\n            return (\r\n                <div style={style}>\r\n                    <button \r\n                        onClick={this.btnLimpiar}\r\n                        className=\"btn btn-warning btn.lg\">\r\n                        Limpiar\r\n                    </button>\r\n                    <Map \r\n                        \r\n                        onClick={this.onMapa}\r\n                        google={this.props.google} \r\n                        initialCenter={{\r\n                            lat: 37.77484758908875,\r\n                            lng: -122.44252162500497\r\n                        }}\r\n                        zoom={14}>\r\n                            {this.state.markers.map((forecast: any) =>\r\n                            <Marker \r\n                                position={{\r\n                                    lat: forecast.lat,\r\n                                    lng: forecast.lng\r\n                                }} />\r\n                            )} \r\n                        <Polygon \r\n                                paths={this.state.markers} />  \r\n                    </Map>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport  default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyDZktO_JnnvrY4BnD2IyZo8PqNXiDTWP1w'\r\n})(MapContainer)\r\n\r\n","import * as React from 'react';\r\nimport { Route } from 'react-router';\r\nimport Layout from './components/Layout';\r\nimport Home from './components/Home';\r\nimport Counter from './components/Counter';\r\nimport Product from './components/Product';\r\nimport FetchData from './components/FetchData';\r\nimport Vieja from './components/Vieja';\r\nimport GoogleMapsType from './components/google/GoogleMapsType';\r\nimport './custom.css'\r\nexport default () => (\r\n    <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/vieja' component={Vieja} />\r\n        <Route path='/googlemaps' component={GoogleMapsType} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/product' component={Product} />\r\n        <Route path='/fetch-data/:startDateIndex?' component={FetchData} />\r\n    </Layout>\r\n);\r\n\r\n/* export default () => (\r\n    <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/product' component={Product} />\r\n        <Route path='/fetch-data/:startDateIndex?' component={FetchData} />\r\n    </Layout>\r\n);\r\n */","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const url = process.env.PUBLIC_URL as string;\r\n        const publicUrl = new URL(url, window.location.toString());\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing as ServiceWorker;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport configureStore from './store/configureStorePersisted';\r\n\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') as string;\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst store = configureStore(history);\r\n\r\n\r\n \r\nconst App2 = () => {\r\n    return (\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    );\r\n  };\r\n\r\nReactDOM.render(\r\n    <Provider store={store.store}>\r\n        <PersistGate loading={null} persistor={store.persistor}>\r\n          <App2 />\r\n        </PersistGate>\r\n      </Provider>\r\n    ,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n","import { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { History } from 'history';\r\n\r\nimport { ApplicationState, reducers } from './';\r\n\r\nexport default function configureStore(history: History, initialState?: ApplicationState) {\r\n    const middleware = [\r\n        thunk,\r\n        routerMiddleware(history)\r\n    ];\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers,\r\n        router: connectRouter(history)\r\n    });\r\n \r\n    const persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    }\r\n \r\n    const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n    \r\n    const enhancers = [];\r\n    const windowIfDefined = typeof window === 'undefined' ? null : window as any;\r\n    if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n    }\r\n\r\n\r\n    let store = createStore(persistedReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ...enhancers))\r\n    let persistor = persistStore(store)\r\n    return { store, persistor }\r\n}"],"sourceRoot":""}